name: Publish Docker Image to Docker Hub

on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up CCACHE cache
        uses: actions/cache@v4
        with:
          path: /tmp/.ccache
          # The key invalidates the cache if the source repo's hash changes.
          # We use a special github.repository value to point to your *other* repo.
          key: ${{ runner.os }}-ccache-ton-fork-${{ github.repository }}-${{ hashFiles('**/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-ccache-ton-fork-${{ github.repository }}-

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: mhbdev/ton-tools # IMPORTANT: Change to your Docker Hub image name
          tags: |
            type=sha,prefix=
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # This securely mounts the restored cache into the build process
          # and saves the updated cache back out for the next run.
          cache-from: type=local,src=/tmp/.ccache
          cache-to: type=local,dest=/tmp/.ccache,mode=max
